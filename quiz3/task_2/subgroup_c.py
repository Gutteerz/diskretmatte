# User-defined variables
n1 = 3  # Replace with any positive integer for the first modulus
n2 = 5  # Replace with any positive integer for the second modulus
generator = (0, 2)  # Replace with the chosen generator element as a tuple (a, b)

# Function to compute the subgroup generated by the given element in the direct product
def generate_subgroup(n1, n2, generator):
    subgroup = set()
    current = generator
    while current not in subgroup:
        subgroup.add(current)
        current = ((current[0] + generator[0]) % n1, (current[1] + generator[1]) % n2)
    return subgroup

# Compute the subgroup
subgroup = generate_subgroup(n1, n2, generator)

# Print the result in the desired format
print(f"<{generator}> = {subgroup}")
